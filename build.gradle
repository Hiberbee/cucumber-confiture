plugins {
  id("java-library")
  id("com.github.ben-manes.versions") version "0.28.0"
  id("idea")
  id("jacoco")
  id("maven-publish")
  id("org.sonarqube") version "2.8" apply false
  id("org.jetbrains.gradle.plugin.idea-ext") version "0.7"
}

group "com.hiberbee.cucumber"
description "Monorepo entrypoint for Cucumber test packages"
version "1.0.0-SNAPSHOT"

def VERSIONS = [
  cucumber            : "5.6.0",
  cucumberReporting   : "4.0.40",
  gradle              : "6.3",
  jetbrainsAnnotations: "19.0",
  junit               : "5.6.2",
  lombok              : "1.18.12",
  springBoot          : "2.2.6.RELEASE",
]

idea {
  project {
    settings {
      copyright {
        useDefault = "Hiberbee"
        profiles {
          Hiberbee {
            notice = file("LICENSE").readLines().join("\n")
          }
        }
      }
    }
  }
}

repositories {
  mavenCentral()
}

class CucumberFeature extends JavaExec {

  CucumberFeature() {
    super.setGroup("verification")
    super.dependsOn(project.tasks.getByName("testClasses"))
    super.outputs.dir("build/reports")
    super.setMain("org.junit.platform.console.ConsoleLauncher")
    super.
      setClasspath(project.
        convention.
        getPlugin(JavaPluginConvention.class).
        getSourceSets().
        findByName("test").
        runtimeClasspath)
    super.args("--include-engine", "cucumber", "--reports-dir", "build/reports")
    super.finalizedBy(project.tasks.getByName("jacocoTestReport"))
  }
}

allprojects {
  group = rootProject.group
  version = rootProject.version

  apply plugin: "org.jetbrains.gradle.plugin.idea-ext"
  apply plugin: "idea"
  apply plugin: "jacoco"
  apply plugin: "java-library"

  wrapper {
    distributionType = Wrapper.DistributionType.ALL
    gradleVersion = VERSIONS.gradle
  }

  idea {
    module {
      downloadJavadoc = false
      downloadSources = true
      excludeDirs += files("gradle", ".gradle", "build")
    }
  }

  jacoco {
    toolVersion "0.8.5"
  }

  tasks.withType(JavaCompile).configureEach {
    setSourceCompatibility(JavaVersion.VERSION_11)
    setTargetCompatibility(JavaVersion.VERSION_11)
    it.options.setFork(true)
    it.options.setIncremental(true)
    dependsOn(tasks.named("processResources"))
  }

  tasks.withType(Test).configureEach {
    useJUnitPlatform {
      failFast = true
    }
    scanForTestClasses(false)
    jacoco {
      enabled = true
      dumpOnExit = true
    }
    finalizedBy(tasks.named("jacocoTestReport"))
  }

  tasks.withType(JacocoCoverageVerification).configureEach {
    setEnabled(true)
  }

  tasks.withType(JacocoReport).configureEach {
    enabled = true
    reports {
      xml.enabled = true
    }
  }

  configurations {
    compileOnly {
      extendsFrom(annotationProcessor)
    }
  }

  dependencies {
    implementation platform("org.junit:junit-bom:$VERSIONS.junit")
    implementation platform("io.cucumber:cucumber-core:$VERSIONS.cucumber")
    implementation platform("org.springframework.boot:spring-boot-dependencies:$VERSIONS.springBoot")

    testImplementation("de.monochromata.cucumber:reporting-plugin:$VERSIONS.cucumberReporting")
    testImplementation("io.cucumber:cucumber-junit-platform-engine")
    testImplementation("org.junit.jupiter:junit-jupiter-api")
    testImplementation("org.junit.jupiter:junit-jupiter-engine")
    testRuntimeOnly("org.junit.platform:junit-platform-console")
    testRuntimeOnly("org.junit.platform:junit-platform-runner")
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine")
  }
}

subprojects {

  repositories {
    mavenLocal()
  }

  apply plugin: "org.sonarqube"
  apply plugin: "maven-publish"

  sonarqube {
    properties {
      property "sonar.projectKey", name
      property "sonar.organization", "hiberbee"
      property "sonar.host.url", "https://sonarcloud.io"
      property "sonar.login", System.getenv("SONARQUBE_TOKEN")
    }
  }

  tasks.register("features", CucumberFeature) {
    args += ["--select-package", "features"]
  }

  publishing {
    repositories {
      maven {
        name = "GitHubPackages"
        url = uri("https://maven.pkg.github.com/hiberbee/cucumber-confiture")
        credentials {
          username = System.getenv("GITHUB_USERNAME")
          password = System.getenv("GITHUB_TOKEN")
        }
      }
    }
    publications {
      gpr(MavenPublication) {
        from(components.java)
      }
    }
  }
}
